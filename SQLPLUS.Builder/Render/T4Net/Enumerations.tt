<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SQLPLUS.Builder" #>
<#@ import namespace="SQLPLUS.Builder.ConfigurationModels" #>
<#@ import namespace="SQLPLUS.Builder.TemplateModels" #>
<#@ parameter name="project" type="SQLPLUS.Builder.ConfigurationModels.ProjectInformation" #>
<#@ parameter name="enums" type="SQLPLUS.Builder.TemplateModels.EnumCollection" #>
// --------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SQL PLUS Code Generation Utility.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------
namespace <#=project.EnumerationsNamespace#>
{
    /// <summary>
    /// Enumeration for query <#=enums.Name#>
    /// </summary>
    public enum <#=enums.Name#> : <#=enums.DataType#>
    {
<#for (int idx=0; idx!= enums.Enums.Count; idx++){#>
        /// <summary>
        /// <#=enums.Enums[idx].Comment#>
        /// </summary>
        <#=enums.Enums[idx].Name#> = <#=enums.Enums[idx].Value#><#=CommaIfNotLast(enums.Enums.Count, idx)#>

<#}#>
    }
}
<#+
private string CommaIfNotLast(int count, int idx)
{
    return idx==count-1 ? "" : ",";
}
#>