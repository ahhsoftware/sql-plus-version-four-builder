// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace SQLPLUS.Builder.Render.T4Net
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using SQLPLUS.Builder;
    using SQLPLUS.Builder.ConfigurationModels;
    using SQLPLUS.Builder.TemplateModels;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class OutputObject : OutputObjectBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"// --------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SQL  Code Generation Utility.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
");
            
            #line 14 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.RoutineType == "QUERY"){
            
            #line default
            #line hidden
            this.Write("//     Underlying Query: ");
            
            #line 15 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 16 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}else{
            
            #line default
            #line hidden
            this.Write("//     Underlying Routine: ");
            
            #line 17 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 18 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("//     Last Modified On: ");
            
            #line 19 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.LastModified.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n//     Written By: ");
            
            #line 20 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Author));
            
            #line default
            #line hidden
            this.Write("\r\n//     Select Type: ");
            
            #line 21 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.SelectType.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n//     Visit https://www.SQLPLUS.net for more information about the SQL Plus bu" +
                    "ild time ORM.\r\n// </auto-generated>\r\n// ----------------------------------------" +
                    "----------------------------------------------------------------\r\nnamespace ");
            
            #line 25 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ModelNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 27 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.UseNullableReferenceTypes){
            
            #line default
            #line hidden
            this.Write("    #nullable enable\r\n\r\n");
            
            #line 30 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 31 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.OutputUsings.Count != 0){
            
            #line default
            #line hidden
            this.Write("\r\n    #region usings\r\n\r\n");
            
            #line 35 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
foreach(string usingDeclaration in routine.OutputUsings){
            
            #line default
            #line hidden
            this.Write("    using ");
            
            #line 36 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(usingDeclaration));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 37 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n    #endregion usings\r\n\r\n");
            
            #line 41 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("    /// <summary>\r\n    /// Output object for ");
            
            #line 43 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write(" service.\r\n    /// </summary>\r\n    public partial class ");
            
            #line 45 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.OutputObjectName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 47 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.ReturnValueEnums.Count != 0){
            
            #line default
            #line hidden
            this.Write("\r\n        #region Return Value Enumerations\r\n\r\n        /// <summary>\r\n        ///" +
                    " Enumerated return values based on the ReturnTags in the procedure.\r\n        ///" +
                    " </summary>\r\n        public enum Returns\r\n        {\r\n");
            
            #line 56 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  for(int idx = 0; idx !=  routine.ReturnValueEnums.Count; idx++){
            
            #line default
            #line hidden
            this.Write("            /// <summary>\r\n            /// ");
            
            #line 58 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ReturnValueEnums[idx].Comment));
            
            #line default
            #line hidden
            this.Write("\r\n            /// </summary>\r\n             ");
            
            #line 60 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ReturnValueEnums[idx].Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 60 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ReturnValueEnums[idx].Value));
            
            #line default
            #line hidden
            
            #line 60 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CommaIfNotLast(routine.ReturnValueEnums.Count - 1, idx)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 61 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n        #endregion Return Value Enumerations\r\n");
            
            #line 65 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 66 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.OutputParameters.Count != 0){
            
            #line default
            #line hidden
            this.Write("\r\n        #region Output Parameters\r\n\r\n");
            
            #line 70 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  foreach(Parameter p in routine.OutputParameters){
            
            #line default
            #line hidden
            this.Write("        /// <summary>\r\n        /// ");
            
            #line 72 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n        public ");
            
            #line 74 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.PropertyType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 74 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.PropertyName));
            
            #line default
            #line hidden
            this.Write(" { set; get; }\r\n");
            
            #line 75 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("\r\n\t    #endregion Output Parameters\r\n");
            
            #line 78 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 79 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.ReturnValueParameter != null){
            
            #line default
            #line hidden
            this.Write("\r\n        #region Return Value\r\n\r\n");
            
            #line 83 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  if (routine.ReturnValueEnums.Count != 0){
            
            #line default
            #line hidden
            this.Write("        /// <summary>\r\n        /// Enumerated return value.\r\n        /// </summar" +
                    "y>\r\n        public Returns ReturnValue { set; get; }\r\n");
            
            #line 88 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}  else{
            
            #line default
            #line hidden
            this.Write("        /// <summary>\r\n        /// Actual return value for the routine.\r\n        " +
                    "/// </summary>\r\n        public ");
            
            #line 92 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ReturnValueParameter.PropertyType));
            
            #line default
            #line hidden
            this.Write(" ReturnValue { set; get; }\r\n");
            
            #line 93 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("\r\n        #endregion Return Value\r\n");
            
            #line 96 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 97 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType != SelectTypes.NonQuery){
            
            #line default
            #line hidden
            this.Write("\r\n        #region Result Data\r\n");
            
            #line 100 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 101 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType == SelectTypes.Json){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// Result data as Json string.\r\n        /// </s" +
                    "ummary>\r\n        public ");
            
            #line 106 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp("string")));
            
            #line default
            #line hidden
            this.Write(" ResultJson { set; get; }\r\n");
            
            #line 107 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 108 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType == SelectTypes.Xml){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// Result data as Xml string.\r\n        /// </su" +
                    "mmary>\r\n        public ");
            
            #line 113 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp("string")));
            
            #line default
            #line hidden
            this.Write(" ResultXml { set; get; }\r\n");
            
            #line 114 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 115 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType == SelectTypes.SingleRow){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// Single instance of ");
            
            #line 118 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ResultObjectName));
            
            #line default
            #line hidden
            this.Write(".\r\n        /// </summary>\r\n        public ");
            
            #line 120 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp(routine.ResultObjectName)));
            
            #line default
            #line hidden
            this.Write(" ResultData { set; get; }\r\n");
            
            #line 121 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 122 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType == SelectTypes.MultiRow){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// List of ");
            
            #line 125 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ResultObjectName));
            
            #line default
            #line hidden
            this.Write(".\r\n        /// </summary>\r\n        public ");
            
            #line 127 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptList(routine.ResultObjectName)));
            
            #line default
            #line hidden
            this.Write(" ResultData { set; get; }\r\n");
            
            #line 128 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 129 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType == SelectTypes.MultiSet){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// Result set wrapper for multiset queries.\r\n  " +
                    "      /// </summary>\r\n        public ");
            
            #line 134 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp(routine.ResultObjectName)));
            
            #line default
            #line hidden
            this.Write(" ResultData { set; get; }\r\n");
            
            #line 135 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            
            #line 136 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType != SelectTypes.NonQuery){
            
            #line default
            #line hidden
            this.Write("\r\n        #endregion Result Data\r\n");
            
            #line 139 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n\r\n");
            
            #line 143 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if(routine.SelectType != SelectTypes.NonQuery){
            
            #line default
            #line hidden
            this.Write("\r\n    #region Result Set Objects\r\n\r\n    /// <summary>\r\n");
            
            #line 148 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  if(routine.SelectType == SelectTypes.MultiSet){
            
            #line default
            #line hidden
            this.Write("    /// Result set objects for ");
            
            #line 149 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ServiceName));
            
            #line default
            #line hidden
            this.Write(" service.\r\n");
            
            #line 150 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }else if(routine.SelectType == SelectTypes.SingleRow || routine.SelectType == SelectTypes.MultiRow){
            
            #line default
            #line hidden
            this.Write("    /// Result object for ");
            
            #line 151 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ServiceName));
            
            #line default
            #line hidden
            this.Write(" service.\r\n");
            
            #line 152 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// </summary>\r\n");
            
            #line 154 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 157 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.SelectType == SelectTypes.MultiSet){
            
            #line default
            #line hidden
            this.Write("\r\n    public partial class ");
            
            #line 159 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write("Result\r\n\t{\r\n");
            
            #line 161 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  foreach(ResultSet rs in routine.ResultSets){
            
            #line default
            #line hidden
            this.Write("        #region ");
            
            #line 162 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 162 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 163 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    if(rs.SelectType == SelectTypes.SingleRow){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// Single instance of ");
            
            #line 166 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n        /// </summary>\r\n        public  ");
            
            #line 168 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp(rs.Name)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 168 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("Result { set; get; }\r\n");
            
            #line 169 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    }
            
            #line default
            #line hidden
            
            #line 170 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    if(rs.SelectType == SelectTypes.MultiRow){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// List of ");
            
            #line 173 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n        /// </summary>\r\n        public ");
            
            #line 175 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptList(rs.Name)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 175 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("Result { set; get; }\r\n");
            
            #line 176 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    }
            
            #line default
            #line hidden
            
            #line 177 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    if(rs.SelectType == SelectTypes.Json){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// ");
            
            #line 180 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write(" result as Json string.\r\n        /// </summary>\r\n        public ");
            
            #line 182 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp("string")));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 182 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("Json { set; get; }\r\n");
            
            #line 183 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    }
            
            #line default
            #line hidden
            
            #line 184 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    if(rs.SelectType == SelectTypes.Xml){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// ");
            
            #line 187 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write(" as XML string.\r\n        /// </summary>\r\n        public ");
            
            #line 189 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OptProp("string")));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 189 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("Xml { set; get; }\r\n");
            
            #line 190 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    }
            
            #line default
            #line hidden
            
            #line 191 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    if(rs.SelectType == SelectTypes.SingleRow || rs.SelectType == SelectTypes.MultiRow){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// Result set object for ");
            
            #line 194 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n        /// </summary>\r\n        public class ");
            
            #line 196 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            /// <summary>\r\n            /// Parameterized constructor" +
                    " for Second\r\n            /// </summary>\r\n");
            
            #line 201 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
      foreach(Column c in rs.Columns){
            
            #line default
            #line hidden
            this.Write("            /// <param name=\"");
            
            #line 202 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 202 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Comment));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 203 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
      }
            
            #line default
            #line hidden
            this.Write("            public ");
            
            #line 204 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 204 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.ConstructorParameters));
            
            #line default
            #line hidden
            this.Write(")\r\n            {\r\n");
            
            #line 206 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
      foreach(Column c in rs.Columns){
            
            #line default
            #line hidden
            this.Write("                this.");
            
            #line 207 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 207 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 208 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
      }
            
            #line default
            #line hidden
            this.Write("            }\r\n\r\n");
            
            #line 211 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
      foreach(Column c in rs.Columns){
            
            #line default
            #line hidden
            this.Write("            /// <summary>\r\n            /// ");
            
            #line 213 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n            /// </summary>\r\n            public ");
            
            #line 215 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 215 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write(" { set; get; }\r\n\r\n");
            
            #line 217 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
      }
            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 219 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    }
            
            #line default
            #line hidden
            this.Write("\r\n        #endregion ");
            
            #line 221 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 221 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rs.Name));
            
            #line default
            #line hidden
            this.Write("\r\n    \r\n");
            
            #line 223 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("    }\r\n");
            
            #line 225 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 228 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.SelectType == SelectTypes.SingleRow || routine.SelectType == SelectTypes.MultiRow){
            
            #line default
            #line hidden
            this.Write("    public partial class ");
            
            #line 229 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write("Result\r\n\t{\r\n        /// <summary>\r\n        /// Result set object for ");
            
            #line 232 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n        /// </summary>\r\n");
            
            #line 234 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  foreach(Column c in routine.ResultSets[0].Columns){
            
            #line default
            #line hidden
            this.Write("        /// <param name=\"");
            
            #line 235 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 235 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Comment));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 236 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 237 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.Name));
            
            #line default
            #line hidden
            this.Write("Result(");
            
            #line 237 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(routine.ResultSets[0].ConstructorParameters));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n");
            
            #line 239 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  foreach(Column c in routine.ResultSets[0].Columns){
            
            #line default
            #line hidden
            this.Write("             this.");
            
            #line 240 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 240 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 241 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n");
            
            #line 244 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  if(routine.ResultSets.Count != 0){
            
            #line default
            #line hidden
            
            #line 245 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    foreach(Column c in routine.ResultSets[0].Columns){
            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        /// ");
            
            #line 248 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n        public ");
            
            #line 250 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 250 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.PropertyName));
            
            #line default
            #line hidden
            this.Write(" { set; get; }\r\n");
            
            #line 251 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
    }
            
            #line default
            #line hidden
            
            #line 252 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
  }
            
            #line default
            #line hidden
            this.Write("    }\r\n");
            
            #line 254 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 257 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
if (routine.SelectType != SelectTypes.NonQuery){
            
            #line default
            #line hidden
            this.Write("    #endregion Result Set Objects\r\n");
            
            #line 259 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 262 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"
 
    private string Format(string sourceString, string value1, string value2)
    {
        return string.Format(sourceString, value1, value2);
    }
    private string CommaIfNotLast(int count, int idx)
    {
        return idx == count ? "" : ",";
    }
    private string OptProp(string propertyName)
    {
        if(routine.UseNullableReferenceTypes)
        {
            return propertyName + "?";
        }
        return propertyName;
    }

    private string OptList(string propertyName)
    {
        if(routine.UseNullableReferenceTypes)
        {
            return "List<" + propertyName + ">?";
        }
        return "List<" + propertyName + ">";
    }
    

        
        #line default
        #line hidden
        
        #line 1 "C:\Users\Alan\source\repos\sql-plus-version-four-builder\SQLPLUS.Builder\Render\T4Net\OutputObject.tt"

private global::SQLPLUS.Builder.TemplateModels.Routine _routineField;

/// <summary>
/// Access the routine parameter of the template.
/// </summary>
private global::SQLPLUS.Builder.TemplateModels.Routine routine
{
    get
    {
        return this._routineField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool routineValueAcquired = false;
if (this.Session.ContainsKey("routine"))
{
    this._routineField = ((global::SQLPLUS.Builder.TemplateModels.Routine)(this.Session["routine"]));
    routineValueAcquired = true;
}
if ((routineValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("routine");
    if ((data != null))
    {
        this._routineField = ((global::SQLPLUS.Builder.TemplateModels.Routine)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class OutputObjectBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
