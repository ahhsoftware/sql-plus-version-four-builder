<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SQLPLUS.Builder" #>
<#@ import namespace="SQLPLUS.Builder.ConfigurationModels" #>
<#@ import namespace="SQLPLUS.Builder.TemplateModels" #>
<#@ parameter name="parameter" type="SQLPLUS.Builder.TemplateModels.Parameter" #>
<#@ parameter name="project" type="SQLPLUS.Builder.ConfigurationModels.ProjectInformation" #>
<#@ parameter name="build" type="SQLPLUS.Builder.ConfigurationModels.BuildDefinition" #>
// --------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SQL+ .NET Code Generation Utility.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//     Underlying Type: [<#=parameter.UserDefinedTypeSchema#>].[<#=parameter.UserDefinedTypeName#>]
//     For more information on SQL+ .NET visit https://www.SQLPlus.net
// </auto-generated>
// --------------------------------------------------------------------------------------------------------
namespace <#=project.UserDefinedTypeNamepace#>
{
<#if (parameter.TVColumnsUsings.Count != 0){#>
    #region usings

<#foreach(string @using in parameter.TVColumnsUsings){#>
    using <#=@using#>;
<#}#>

    #endregion usings

<#}#>
	/// <summary>
    /// Input object table value parameter <#=parameter.UserDefinedTypeName#>.
    /// </summary>
    public partial class <#=parameter.UserDefinedTypeName#>
    {
        #region Constructors

        /// <summary>
        /// Empty constructor for <#=parameter.UserDefinedTypeName#>.
        /// </summary>
        public <#=parameter.UserDefinedTypeName#>() { }

        /// <summary>
        /// Parameterized constructor for <#=parameter.UserDefinedTypeName#>.
        /// </summary>
<#foreach(Column c in parameter.TVColumns){#>
        /// <param name="<#=c.PropertyName#>">Maps to column <#=c.Name#>.</param>
<#}#>
        public <#=parameter.UserDefinedTypeName#>(<#=parameter.TVColumnsConcat#>)
        {
<#foreach(Column c in parameter.TVColumns){#>
            this.<#=c.PropertyName#> = <#=c.PropertyName#>;
<#}#>
        }

        #endregion Constructors

        #region Fields

<#foreach(Column c in parameter.TVColumns){#>
        /// <summary>
        /// <#=c.Comment#>
        /// </summary>
<#  foreach(string annotation in c.Annotations){#>
        <#=annotation#>
<#  }#>
        public <#=c.PropertyType#> <#=c.PropertyName#> { set; get; }

<#}#>
        #endregion Fields
    }
}