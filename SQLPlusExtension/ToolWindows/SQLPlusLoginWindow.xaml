<platform:DialogWindow  x:Class="SQLPlusExtension.SQLPlusLoginWindow"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                        xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
                        xmlns:models="clr-namespace:SQLPlusExtension.Models"
                        mc:Ignorable="d"
                        ResizeMode="NoResize"
                        WindowStyle="SingleBorderWindow"
                        Height="380"
                        Width="450"
                        Title="SQL+ .NET Code Generation Utility Version 4.1.6"
                        Background="White"
                        >
    <Window.Resources>
        <SolidColorBrush x:Key="PrimaryColorBrush" Color="#FF444444"/>
        <SolidColorBrush x:Key="Purple" Color="#FF652C90"/>
        <SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ContentBorderBrush" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="BrightColorBrush" Color="#FF652C90"/>
        <SolidColorBrush x:Key="ReverseBrightColorBrush" Color="#FFFAFAFA"/>
        <SolidColorBrush x:Key="ErrorColorBrush" Color="Red"/>
        <FontFamily x:Key="PrimaryFont">Segoe UI</FontFamily>
        <Style x:Key="ActiveNavigationItemBorder" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Purple}"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Width" Value="38"/>
            <Setter Property="CornerRadius" Value="2" />
        </Style>
        
        <Style x:Key="TextBlockStyleBase" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="ValidatedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ValidatedPasswordBox" TargetType="{x:Type PasswordBox}">
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ValidatedPasswordBoxSmall" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource ValidatedPasswordBox}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Border DockPanel.Dock="Right" Margin="5,0,0,0" Height="18" Width="18" BorderThickness="0" CornerRadius="2" Background="{StaticResource BrightColorBrush}" ToolTip="{Binding Path=/ErrorContent}">
                                <TextBlock Text="!" FontSize="14" FontWeight="Bold" FontFamily="Arial Black" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource ReverseBrightColorBrush}"></TextBlock>
                            </Border>
                            <AdornedElementPlaceholder x:Name="placeholder"/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding BorderBrush}" Padding="2,0,0,0">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ValidatedTextBoxSmall" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ValidatedTextBox}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Border DockPanel.Dock="Right" Margin="5,0,0,0" Height="18" Width="18" BorderThickness="0" CornerRadius="2" Background="{StaticResource BrightColorBrush}" ToolTip="{Binding Path=/ErrorContent}">
                                <TextBlock Text="!" FontSize="14" FontWeight="Bold" FontFamily="Arial Black" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource ReverseBrightColorBrush}"></TextBlock>
                            </Border>
                            <AdornedElementPlaceholder x:Name="placeholder"/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding BorderBrush}" Padding="2,0,0,0">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ErrorStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ErrorColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>
        <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ReverseBrightColorBrush}"/>
            <Setter Property="Background" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource ReverseBrightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyleLarge" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="LabelStyleSmall" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
    </Window.Resources>
    <Grid x:Name="Shell" Margin="20,0,20,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Border Height="2" Background="{StaticResource BrightColorBrush}" VerticalAlignment="Bottom"></Border>
        <StackPanel Orientation="Horizontal">
            <Image Source="/SQLPlusExtension;component/Resources/Lock.png"  Height="24" Width="24" Margin="10,0"/>
            <TextBlock Style="{StaticResource TextBlockStyleBase}" FontSize="24" VerticalAlignment="Center" Text="Login to Continue" />
        </StackPanel>
        
        
        <!-- End Header -->

       
        <!-- Content Grid --> 
        <Grid Name="ContentGrid" ShowGridLines="True" Grid.Row="1">
            
            <Grid Margin="20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="48"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Invalid Email/Password Combination" Style="{StaticResource ErrorStyle}"></TextBlock>
                <TextBlock Grid.Row="1" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Email:"/>
                <TextBox Grid.Row="2" Text="{Binding Email,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ValidatedTextBoxSmall}"/>

                <TextBlock Grid.Row="3" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Password:"/>
                <TextBox Grid.Row="4" Text="{Binding Password,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ValidatedTextBoxSmall}"/>

                <Button Grid.Row="5" Width="96" Height="32" HorizontalAlignment="Center" Style="{StaticResource PrimaryButtonStyle}" Content="Login" IsDefault="True" Command="{Binding LoginCommand}"></Button>

                <TextBlock Grid.Row="6" Text="{Binding PasswordValue}"/>
                <!--<TextBlock Grid.Row="6" Style="{StaticResource LabelStyleSmall}" HorizontalAlignment="Center">
                    <Run>Not Yet Registered? Sign Up</Run>
                        <Hyperlink NavigateUri="https://www.sqlplus.net/register" RequestNavigate="Hyperlink_RequestNavigate" >Here</Hyperlink>
                </TextBlock>-->

                <TextBlock Grid.Row="7" Style="{StaticResource LabelStyleSmall}" HorizontalAlignment="Center">
                    <Run>Forgot Password? Reset it </Run>
                        <Hyperlink NavigateUri="https://www.sqlplus.net/account/forgot-password" RequestNavigate="Hyperlink_RequestNavigate" >Here</Hyperlink>
                </TextBlock>

            </Grid>

        </Grid>


        <!--<Grid x:Name="Processing" d:Visibility="Collapsed" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="5" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
            <Border Background="Black" Opacity=".4"/>
            <TextBlock Text="Logging In..." FontSize="36" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
        </Grid>-->

        
    </Grid>
    
    

</platform:DialogWindow>
