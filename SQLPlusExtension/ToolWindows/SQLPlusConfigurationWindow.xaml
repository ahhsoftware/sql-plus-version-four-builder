<platform:DialogWindow  x:Class="SQLPlusExtension.SQLPlusConfigurationWindow"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                        xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
                        xmlns:models="clr-namespace:SQLPlusExtension.Models"
                        mc:Ignorable="d"
                        ResizeMode="NoResize"
                        WindowStyle="SingleBorderWindow"
                        Height="600"
                        Width="800"
                        Title="SQL+ .NET Code Generation Utility Version 4.0.0"
                        Background="White"
                        xmlns:converters="clr-namespace:SQLPlusExtension.Converters"
                        >
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
        <converters:IsErrorToColorConverterRedWhite x:Key="IsErrorToColorConverterRedWhite"/>
        <converters:IsErrorToColorConvertRedBlack x:Key="IsErrorToColorConvertRedBlack" />
        <SolidColorBrush x:Key="PrimaryColorBrush" Color="#FF444444"/>
        <SolidColorBrush x:Key="Purple" Color="#FF652C90"/>
        <SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ContentBorderBrush" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="BrightColorBrush" Color="#FF652C90"/>
        <SolidColorBrush x:Key="ReverseBrightColorBrush" Color="#FFFAFAFA"/>
        <SolidColorBrush x:Key="ErrorColorBrush" Color="Red"/>
        <FontFamily x:Key="PrimaryFont">Segoe UI</FontFamily>
        <Style x:Key="ActiveNavigationItemBorder" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Purple}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="CornerRadius" Value="16"/>
        </Style>
        <Style x:Key="ContentBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5,5,5,5"/>
        </Style>
        <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Width" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="17" Height="34" Width="34">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryColorBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".5"/>
                                <Setter Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockStyleBase" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="AlternateButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyleLarge" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="LabelStyleSmall" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="ValidatedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ValidatedTextBoxSmall" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ValidatedTextBox}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Border DockPanel.Dock="Right" Margin="5,0,0,0" Height="18" Width="18" BorderThickness="0" CornerRadius="2" Background="{StaticResource BrightColorBrush}" ToolTip="{Binding Path=/ErrorContent}">
                                <TextBlock Text="!" FontSize="14" FontWeight="Bold" FontFamily="Arial Black" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource ReverseBrightColorBrush}"></TextBlock>
                            </Border>
                            <AdornedElementPlaceholder x:Name="placeholder"/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding BorderBrush}" Padding="2,0,0,0">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ErrorStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ErrorColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>
        <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ReverseBrightColorBrush}"/>
            <Setter Property="Background" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource ReverseBrightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="Shell">
        <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="490"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="660"/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <Border Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
            <Border.Background>
                <ImageBrush ImageSource="../Resources/BannerControl.png"/>
            </Border.Background>
        </Border>
        <Image Grid.Row="1" Grid.Column="1" Source="{Binding BannerImage}" Margin="10,10,10,10"/>
        <TextBlock Grid.Row="1" Grid.Column="2" Style="{StaticResource TextBlockStyleBase}" FontSize="24" Margin="16,4,0,0" Text="{Binding BannerText}" />

        <Button Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding HelpCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Help">
            <Grid>
                <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding HelpActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                <Image Source="../Resources/HelpIcon.png" Height="20" Width="20"/>
            </Grid>
        </Button>
        <Border Grid.Row="2" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>

        <!-- End Header -->

        <!-- Navigation Buttons -->
        <Grid Grid.Row="2" Grid.Column="1" Name="NavigationButtons">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="23"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button Grid.Row="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding ConnectCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Connect">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding ConnectActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/ConnectIcon.png" Height="20" Width="20"/>
                </Grid>
            </Button>
            <Border Grid.Row="2" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>
            <Button Grid.Row="3" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding RoutinesCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="SQL Routines">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding RoutinesActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Border BorderBrush="{StaticResource ErrorColorBrush}" Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding HasAnyDBRoutineErrors, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <Image Source="../Resources/BuildObjectsIcon.png" Height="20" Width="20" />
                </Grid>
            </Button>
            <Border Grid.Row="4" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>
            <Button Grid.Row="5" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding QueriesCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Query Routines">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding QueriesActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Border BorderBrush="{StaticResource ErrorColorBrush}" Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding HasAnyQueryRoutineErrors, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <Image Source="../Resources/QueriesIcon.png" Height="20" Width="20"/>
                </Grid>
            </Button>
            <Border Grid.Row="6" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>
            <Button Grid.Row="7"  Style="{DynamicResource NavigationButtonStyle}" Command="{Binding StaticsCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Static Data">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding StaticsActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/StaticsIcon.png" Height="20" Width="20" />
                </Grid>
            </Button>
            <Border Grid.Row="8" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>
            <Button Grid.Row="9"  Style="{DynamicResource NavigationButtonStyle}" Command="{Binding EnumsCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Static Data">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding EnumsActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/StaticsIcon.png" Height="20" Width="20" />
                </Grid>
            </Button>
            <Border Grid.Row="10" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>
            <Button Grid.Row="11"  Style="{DynamicResource NavigationButtonStyle}" Command="{Binding SettingsCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Settings">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding SettingsActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/SettingsIcon.png" Height="20" Width="20" />
                </Grid>
            </Button>
            <Border Grid.Row="12" Background="White" Width="4" Height="24" CornerRadius="2,2,2,2"/>
            <Button Grid.Row="13" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding BuildCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Build">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding BuildActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/BuildIcon.png" Height="20" Width="20" />
                </Grid>
            </Button>
        </Grid>
        <!-- End Navigation Buttons -->

        <!-- Content Grid -->
        <Grid Grid.Column="2" Grid.Row="2">

            <Grid x:Name="HelpContent" d:Visibility="Collapsed" Visibility="{Binding HelpActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="48"/>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>

                <Grid Grid.Row="1" Grid.Column="1" Name="HelpGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="48"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="48"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Follow the links below to get online help." HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{StaticResource LabelStyleLarge}"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0">
                        <Hyperlink NavigateUri="https://www.sqlplus.net/content/SqlPlusDocs.pdf" RequestNavigate="Hyperlink_RequestNavigate">Online Documentation</Hyperlink>
                    </TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="1" Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0">
                        <Hyperlink NavigateUri="https://github.com/ahhsoftware/SQLPlusSampleApp" RequestNavigate="Hyperlink_RequestNavigate" >Sample Applications</Hyperlink>
                    </TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="1" Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0">
                        <Hyperlink NavigateUri="https://www.sqlplus.net/Home/Learn" RequestNavigate="Hyperlink_RequestNavigate">Video Tutorials</Hyperlink>
                    </TextBlock>

                    <!--<StackPanel Grid.Row="4" Grid.Column="1" Margin="0,20,0,20" d:Visibility="Visible" Visibility="{Binding AuthorizedUser, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=true}" VerticalAlignment="Top">
                        <TextBlock Style="{StaticResource LabelStyleLarge}" TextWrapping="Wrap">
                            <Run>If you are a professional or enterprise license holder, please login for access to additional support options.</Run>
                            <LineBreak/>
                            <LineBreak/>
                            <Run>Not registered? Get started by registering here.</Run>
                            <LineBreak/>
                            <Button Style="{StaticResource AlternateButtonStyle}" Content="Register" Height="32" Width="96" Margin="0,5,0,0" FontSize="12" Command="{Binding RegisterCommand}" />
                        </TextBlock>

                    </StackPanel>-->
                </Grid>
            </Grid>

            <Grid x:Name="ConnectionContent" d:Visibility="Collapsed" Visibility="{Binding ConnectActive, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid Name="ConnectGrid">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="48"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="48"/>
                        <RowDefinition Height="400"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>

                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid HorizontalAlignment="Center" Margin="20,20,20,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="120"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="64"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="250"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Database Type:"/>
                            <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource ValidatedTextBoxSmall}" Text="{Binding DatabaseConnectionDatabaseType, Mode=TwoWay}" IsReadOnly="True" TabIndex="0"/>

                            <TextBlock Grid.Row="2" Grid.Column="0"  Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Connection String:"/>
                            <TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource ValidatedTextBoxSmall}" Height="110" Text="{Binding DatabaseConnectionConnectionString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="1" TextWrapping="Wrap" VerticalContentAlignment="Top"/>

                            <TextBlock Grid.Row="5" TextWrapping="Wrap" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding ConnectionError}" Style="{StaticResource ErrorStyle}" Margin="0,10,0,10"/>



                            <Button Grid.Row="8" Width="96" Height="32" HorizontalAlignment="Left" Style="{StaticResource AlternateButtonStyle}" Content="Cancel" KeyboardNavigation.IsTabStop="False"></Button>
                            <Button Grid.Row="8" Width="96" Height="32" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource PrimaryButtonStyle}" Content="Connect" Command="{Binding ConnectPaneConnect}" TabIndex="7" IsDefault="True"></Button>

                        </Grid>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Name="SQLRoutinesGridContainer" d:Visibility="Collapsed" Visibility="{Binding RoutinesActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="564"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="48"/>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>

                <!-- SQL Routines -->
                <Grid Name="SQLRoutinesGrid" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <TreeView Grid.Column="0" Grid.Row="0"  Focusable="False" ItemsSource="{Binding SQLRoutines}" IsTabStop="False" KeyboardNavigation.TabNavigation="Cycle" Margin="10,10,0,0" BorderBrush="Transparent">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type models:Schema}" ItemsSource="{Binding Routines}">
                                <StackPanel Orientation="Horizontal" Width="520" Height="32" Margin="5">
                                    <CheckBox VerticalAlignment="Center" Margin="0,0,5,0" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Width="180" FontWeight="SemiBold" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" ></TextBlock>
                                    <TextBlock VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Text=" Namespace: " Style="{StaticResource LabelStyle}" FontWeight="SemiBold" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"/>
                                    <TextBox VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Text="{Binding Namespace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        Style="{StaticResource ValidatedTextBoxSmall}" FontWeight="SemiBold"
                                        Width="190" Margin="0,0,30,0" KeyboardNavigation.TabNavigation="Continue" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}">
                                    </TextBox>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type models:Routine}">
                                <Grid>
                                    <Border Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" BorderBrush="{StaticResource ErrorColorBrush}" BorderThickness="2" CornerRadius="2" Margin="-5,-3,1,0"></Border>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Height="28">
                                            <CheckBox VerticalAlignment="Center" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Width="170" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"></TextBlock>
                                            <TextBlock VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" Text=" Namespace: " Style="{StaticResource LabelStyle}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"/>
                                            <TextBox VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"
                                        Text="{Binding Namespace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        Style="{StaticResource ValidatedTextBoxSmall}"
                                        Width="180" Margin="0,0,30,0" KeyboardNavigation.IsTabStop="True"/>
                                        </StackPanel>

                                        <TextBlock Text="{Binding RoutineError}" Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="{StaticResource ErrorColorBrush}" Margin="5"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
                <!--<Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding SQLRoutines, Converter={StaticResource NotNullToVisibilityConverter}}">
                    <TextBlock Visibility="{Binding RoutinesActive, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource ErrorStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" FontSize="16"  Text="No SQL+ Routines found in connected database. Only routines that have been semantically tagged can be built."></TextBlock>
                </Grid>-->
                <!-- End SQL Routines -->


            </Grid>

            <Grid Name="SQLQueriesGridContainer" d:Visibility="Collapsed" Visibility="{Binding QueriesActive, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="564"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="48"/>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>
                <Grid Name="SQLQueriesGrid" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <TreeView Focusable="False" ItemsSource="{Binding SQLQueries}" IsTabStop="False" KeyboardNavigation.TabNavigation="Cycle" Margin="10,10,0,0" BorderBrush="Transparent">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type models:Schema}" ItemsSource="{Binding Routines}">
                                <StackPanel Orientation="Horizontal" Width="520" Height="32" Margin="5">
                                    <CheckBox VerticalAlignment="Center" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" Margin="0,0,5,0" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Namespace}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Width="180" FontWeight="SemiBold"></TextBlock>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type models:Routine}">
                                <Grid>
                                    <Border Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" BorderBrush="{StaticResource ErrorColorBrush}" BorderThickness="2" CornerRadius="2" Margin="-5,-3,1,0"></Border>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Height="28">
                                            <CheckBox BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" VerticalAlignment="Center" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                                            <TextBlock Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" VerticalAlignment="Center" Text="{Binding Name}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Width="170"></TextBlock>
                                        </StackPanel>
                                        <TextBlock Text="{Binding RoutineError}" Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="{StaticResource ErrorColorBrush}" Margin="5"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
                <!--<Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding SQLQueries, Converter={StaticResource NotNullToVisibilityConverter}}">
                    <TextBlock Visibility="{Binding QueriesActive, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource ErrorStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" FontSize="16"  Text="No SQL+ Queries found. You can add queries to the Queries folder."></TextBlock>
                </Grid>-->
            </Grid>

            <Grid x:Name="StaticsContentGridContainer" d:Visibility="Collapsed" Visibility="{Binding StaticsActive, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="564"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="48"/>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>

                <Grid x:Name="StaticsContentGrid" Grid.Row="1" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="128" Height="24" Style="{StaticResource AlternateButtonStyle}" Command="{Binding AddStaticsCommand}" Margin="0,0,10,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="14" Width="14" Source="../Resources/Add.png" Margin="3,0,3,0"/>
                            <TextBlock Text="Add Static Query" ></TextBlock>
                        </StackPanel>
                    </Button>

                    <ScrollViewer Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Margin="10" Height="340">
                        <ItemsControl ItemsSource="{Binding StaticQueries}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <GroupBox Header="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{StaticResource BrightColorBrush}" Foreground="{StaticResource BrightColorBrush}" FontFamily="{StaticResource PrimaryFont}" Margin="5">
                                        <Grid VerticalAlignment="Center" Margin="0,5,0,5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="32"/>
                                                <RowDefinition Height="64"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition Width="436"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Text="Name: " VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                            <TextBox Grid.Row="0" Grid.Column="2" 
                                                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ValidatedTextBoxSmall}" Width="200" HorizontalAlignment="Left"></TextBox>
                                            <Button Grid.Row="0" Grid.Column="2" Margin="0,0,16,0" Command="{Binding DeleteCommand}" BorderBrush="{StaticResource ErrorColorBrush}" Style="{StaticResource AlternateButtonStyle}" Width="24" Height="24" HorizontalAlignment="Right" KeyboardNavigation.IsTabStop="False">
                                                <Image Height="14" Width="14" Source="../Resources/Delete.png"/>
                                            </Button>
                                            <TextBlock Grid.Row="1" Grid.Column="1" Text="Query:" VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                            <TextBox Grid.Row="1" Grid.Column="2" Width="420" HorizontalAlignment="Left"
                                                     Text="{Binding Query, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" TextWrapping="Wrap" Height="64" VerticalContentAlignment="Top" VerticalScrollBarVisibility="Visible" Style="{StaticResource ValidatedTextBoxSmall}"/>
                                        </Grid>
                                    </GroupBox>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                </Grid>
            </Grid>

            <Grid x:Name="EnumsContainerGrid" d:Visibility="Collapsed" Visibility="{Binding EnumsActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="564"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="48"/>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>

                <Grid x:Name="EnumsContentGrid" Grid.Row="1" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="128" Height="24" Style="{StaticResource AlternateButtonStyle}" Command="{Binding AddEnumCommand}" Margin="0,0,10,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="14" Width="14" Source="../Resources/Add.png" Margin="3,0,3,0"/>
                            <TextBlock Text="Add Enum Query" ></TextBlock>
                        </StackPanel>
                    </Button>

                    <ScrollViewer Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Margin="10" Height="340">
                        <ItemsControl ItemsSource="{Binding EnumQueries}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <GroupBox Header="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{StaticResource BrightColorBrush}" Foreground="{StaticResource BrightColorBrush}" FontFamily="{StaticResource PrimaryFont}" Margin="5">
                                        <Grid VerticalAlignment="Center" Margin="0,5,0,5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="32"/>
                                                <RowDefinition Height="64"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition Width="436"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Text="Name: " VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                            <TextBox Grid.Row="0" Grid.Column="2" 
                                                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ValidatedTextBoxSmall}" Width="200" HorizontalAlignment="Left"></TextBox>
                                            <Button Grid.Row="0" Grid.Column="2" Margin="0,0,16,0" Command="{Binding DeleteCommand}" BorderBrush="{StaticResource ErrorColorBrush}" Style="{StaticResource AlternateButtonStyle}" Width="24" Height="24" HorizontalAlignment="Right" KeyboardNavigation.IsTabStop="False">
                                                <Image Height="14" Width="14" Source="../Resources/Delete.png"/>
                                            </Button>
                                            <TextBlock Grid.Row="1" Grid.Column="1" Text="Query:" VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                            <TextBox Grid.Row="1" Grid.Column="2" Width="420" HorizontalAlignment="Left"
                                                     Text="{Binding Query, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" TextWrapping="Wrap" Height="64" VerticalContentAlignment="Top" VerticalScrollBarVisibility="Visible" Style="{StaticResource ValidatedTextBoxSmall}"/>
                                        </Grid>
                                    </GroupBox>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                </Grid>
            </Grid>

            <Grid Name="SettingsGridContainer" d:Visibility="Collapsed" Visibility="{Binding SettingsActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="48"/>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentBorderStyle}"/>

                <Grid Name="SettingsGrid" Grid.Row="1" Grid.Column="1">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="24"/>
                        <ColumnDefinition Width="*"/>

                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Text="SQL Client:" Style="{StaticResource LabelStyleSmall}"/>
                    <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Top" Width="300" HorizontalAlignment="Left" Style="{StaticResource ValidatedTextBoxSmall}" Text="{Binding SQLClientNamespace}" />

                    <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding ImplementINotifyPropertyChanged}"/>
                    <TextBlock Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" Text="Implement INotifyPropertyChanged"/>

                    <CheckBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding ImplementIChangeTracking}"/>
                    <TextBlock Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" Text="Implement IChangeTracking"/>

                    <CheckBox Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding ImplementIRevertibleChangeTracking}"/>
                    <TextBlock Grid.Row="5" Grid.Column="2" VerticalAlignment="Center" Text="Implement IRevertibleChangeTracking"/>

                    <CheckBox Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding IncludeAsynchronousMethods}"/>
                    <TextBlock Grid.Row="6" Grid.Column="2" VerticalAlignment="Center" Text="Include Asynchronous Methods"/>

                    <CheckBox Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding UseNullableReferenceTypes}"/>
                    <TextBlock Grid.Row="7" Grid.Column="2" VerticalAlignment="Center" Text="Use Nullable Reference Types"/>

                </Grid>

            </Grid>

            <Grid x:Name="BuildContent" d:Visibility="Visible" Visibility="{Binding BuildActive, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="48"/>
                    <RowDefinition Height="350"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="7*"/>
                </Grid.RowDefinitions>

                <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged"  Grid.Row="1" Grid.Column="1" Background="Black" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <StackPanel>
                        <ItemsControl ItemsSource="{Binding BuildOutput, Mode=OneWay}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:BuildItem}">
                                    <TextBlock Text="{Binding Text}" Foreground="{Binding IsError, Converter={StaticResource IsErrorToColorConverterRedWhite}}" FontFamily="Consolas" Margin="10,1,10,1"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>

                <Button Grid.Row="2" Grid.Column="1" Style="{StaticResource PrimaryButtonStyle}" Command="{Binding SaveConfigurationCommand}"
                        Width="150" Height="36" HorizontalAlignment="Left" Content="Save Configuration" VerticalAlignment="Bottom"></Button>

                <Button Grid.Row="2" Grid.Column="1" Style="{StaticResource PrimaryButtonStyle}" Command="{Binding BuildProjectCommand}"
                        Width="150" Height="36" HorizontalAlignment="Right" Content="Build Project" VerticalAlignment="Bottom"></Button>

            </Grid>
        </Grid>

        <Grid x:Name="BusyIndicator" d:Visibility="Collapsed" Grid.Row="0" Grid.RowSpan="4" Grid.Column="0" Grid.ColumnSpan="4" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
            <Border Background="Black" Opacity=".2"/>
            <TextBlock Text="Processing..." FontSize="36" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
        </Grid>

    </Grid>

</platform:DialogWindow>
