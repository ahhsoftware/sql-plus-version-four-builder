<platform:DialogWindow  x:Class="SQLPlusExtension.SQLPlusConfigurationWindow"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                        xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
                        xmlns:models="clr-namespace:SQLPlusExtension.Models"
                        mc:Ignorable="d"
                        ResizeMode="NoResize"
                        WindowStyle="SingleBorderWindow"
                        Height="600"
                        Width="800"
                        Title="SQL+ Code Generation Utility Version 4.2.0"
                        Background="White"
                        xmlns:converters="clr-namespace:SQLPlusExtension.Converters"
                        >
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
        <converters:IsErrorToColorConverterRedWhite x:Key="IsErrorToColorConverterRedWhite"/>
        <converters:IsErrorToColorConvertRedBlack x:Key="IsErrorToColorConvertRedBlack" />
        <SolidColorBrush x:Key="PrimaryColorBrush" Color="#FF444444"/>
        <SolidColorBrush x:Key="Purple" Color="#FF652C90"/>
        <SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ContentBorderBrush" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="BrightColorBrush" Color="#FF652C90"/>
        <SolidColorBrush x:Key="ReverseBrightColorBrush" Color="#FFFAFAFA"/>
        <SolidColorBrush x:Key="ErrorColorBrush" Color="Red"/>
        <FontFamily x:Key="PrimaryFont">Segoe UI</FontFamily>
        <Style x:Key="ActiveNavigationItemBorder" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Purple}"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Width" Value="38"/>
            <Setter Property="CornerRadius" Value="2" />
        </Style>
        <Style x:Key="ContentBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5,5,5,5"/>
        </Style>
        <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX=".9" ScaleY=".9"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockStyleBase" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="AlternateButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyleLarge" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="LabelStyleSmall" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="ValidatedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ValidatedTextBoxSmall" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ValidatedTextBox}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Border DockPanel.Dock="Right" Margin="5,0,0,0" Height="18" Width="18" BorderThickness="0" CornerRadius="2" Background="{StaticResource BrightColorBrush}" ToolTip="{Binding Path=/ErrorContent}">
                                <TextBlock Text="!" FontSize="14" FontWeight="Bold" FontFamily="Arial Black" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource ReverseBrightColorBrush}"></TextBlock>
                            </Border>
                            <AdornedElementPlaceholder x:Name="placeholder"/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding BorderBrush}" Padding="2,0,0,0">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ErrorStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ErrorColorBrush}"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>
        <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ReverseBrightColorBrush}"/>
            <Setter Property="Background" Value="{StaticResource BrightColorBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource ReverseBrightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".50" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="Shell" ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="88"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <Border Grid.ColumnSpan="3" Height="2" Background="{StaticResource BrightColorBrush}" VerticalAlignment="Bottom"></Border>
        <Image Source="{Binding BannerImage}" Height="24" Width="24" />
        <TextBlock Grid.Column="1" Style="{StaticResource TextBlockStyleBase}" FontSize="24" VerticalAlignment="Center" Text="{Binding BannerText}" />
        <Button Grid.Column="2" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding HelpCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Help" Height="36" Width="36">
            <Grid>
                <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding HelpActive, Converter={StaticResource BoolToVisibilityConverter}}" Height="32" Width="32"></Border>
                <Image Source="../Resources/HelpIcon.png" Height="24" Width="24"/>
            </Grid>
        </Button>
        <!--<Button Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding LogoutCommand}" CommandParameter="{Binding ElementName=LoginPasswordBox}" KeyboardNavigation.IsTabStop="False" ToolTip="Log out of your account" Height="36" Width="36" HorizontalAlignment="Right">
            <Grid>
                <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding LoginActive, Converter={StaticResource BoolToVisibilityConverter}}" Height="32" Width="32" ></Border>
                <Image Source="../Resources/Lock.png" Height="24" Width="24"/>
            </Grid>
        </Button>-->
        <!-- End Header -->

        <!-- Navigation Buttons -->
        <Grid Grid.Row="1" Name="NavigationButtons">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="23"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="24"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Row="3" Background="Red" Height="6" Width="6" CornerRadius="3" Visibility="{Binding HasAnyDBRoutineErrors, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <Border Grid.Row="5" Background="Red" Height="6" Width="6" CornerRadius="3" Visibility="{Binding HasAnyQueryRoutineErrors, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <Border Grid.Row="7" Background="Red" Height="6" Width="6" CornerRadius="3" Visibility="{Binding HasAnyStaticErrors, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <Border Grid.Row="9" Background="Red" Height="6" Width="6" CornerRadius="3" Visibility="{Binding HasAnyEnumErrors, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <Button Grid.Row="1" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding ConnectCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Configure Database Connection">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" Visibility="{Binding ConnectActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/ConnectIcon.png" Height="24" Width="24"/>
                </Grid>
            </Button>

            <Button Grid.Row="3" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding RoutinesCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="{Binding RoutinesTooltip}">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" BorderBrush="Green" Visibility="{Binding RoutinesActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/DBRoutinesIcon.png" Height="24" Width="24"/>
                </Grid>
            </Button>

            <Button Grid.Row="5" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding QueriesCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="{Binding QueryTooltip}">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" BorderBrush="Green" Visibility="{Binding QueriesActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/QueriesIcon.png" Height="24" Width="24" Margin="0,4,0,0"/>
                </Grid>
            </Button>

            <Button Grid.Row="7" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding StaticsCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="{Binding StaticsTooltip}">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" BorderBrush="Green"  Visibility="{Binding StaticsActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/StaticsIcon.png" Height="24" Width="24" />
                </Grid>
            </Button>

            <Button Grid.Row="9" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding EnumsCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="{Binding EnumsTooltip}">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" BorderBrush="Green" Visibility="{Binding EnumsActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/EnumsIcon.png" Height="24" Width="24" />
                </Grid>
            </Button>

            <Button Grid.Row="11" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding SettingsCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Configure Build Settings">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}"  BorderBrush="Green" Visibility="{Binding SettingsActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/SettingsIcon.png" Height="24" Width="24" />
                </Grid>
            </Button>

            <Button Grid.Row="13" Grid.Column="1" Style="{DynamicResource NavigationButtonStyle}" Command="{Binding BuildCommand}" KeyboardNavigation.IsTabStop="False" ToolTip="Build Project">
                <Grid>
                    <Border Style="{StaticResource ActiveNavigationItemBorder}" BorderBrush="Green" Visibility="{Binding BuildActive, Converter={StaticResource BoolToVisibilityConverter}}"></Border>
                    <Image Source="../Resources/BuildIcon.png" Height="24" Width="24" />
                </Grid>
            </Button>

        </Grid>
        <!-- End Navigation Buttons -->

        <!-- Content Grid -->
        <Grid Name="ContentGrid" Grid.Column="1" Grid.Row="1" Margin="0,30,0,30">

            <StackPanel Name="HelpContent" Margin="30" d:Visibility="Collapsed" Visibility="{Binding HelpActive, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock Text="Follow the links below to get online help." HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{StaticResource LabelStyleLarge}"/>
                <TextBlock Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0"/>
                <TextBlock Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0">
                        <Hyperlink NavigateUri="https://www.sqlplus.net/documentation" RequestNavigate="Hyperlink_RequestNavigate">Online Documentation</Hyperlink>
                </TextBlock>
                <TextBlock Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0">
                        <Hyperlink NavigateUri="https://github.com/ahhsoftware" RequestNavigate="Hyperlink_RequestNavigate" >Sample Applications</Hyperlink>
                </TextBlock>
                <TextBlock Style="{StaticResource LabelStyleLarge}" VerticalAlignment="Bottom" Margin="20,0,0,0">
                        <Hyperlink NavigateUri="https://www.sqlplus.net/documentation/video-tutorials" RequestNavigate="Hyperlink_RequestNavigate">Video Tutorials</Hyperlink>
                </TextBlock>
            </StackPanel>

            <Grid Width="500" VerticalAlignment="Center" x:Name="ConnectionContent"  d:Visibility="Collapsed" Visibility="{Binding ConnectActive, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Center" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="120"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Database Type:"/>
                <TextBox Grid.Row="1" Style="{StaticResource ValidatedTextBoxSmall}" Text="{Binding DatabaseType, Mode=TwoWay}" IsReadOnly="True" TabIndex="0"/>
                <TextBlock Grid.Row="2" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Connection String:"/>
                <TextBox Grid.Row="3" Style="{StaticResource ValidatedTextBoxSmall}" Height="110" Text="{Binding ConnectionString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="1" TextWrapping="Wrap" VerticalContentAlignment="Top"/>
                <TextBlock Grid.Row="5" TextWrapping="Wrap" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding ConnectionError}" Style="{StaticResource ErrorStyle}" Margin="0,10,0,10"/>
                <Button Grid.Row="6" Width="96" Height="32" HorizontalAlignment="Right" Style="{StaticResource PrimaryButtonStyle}" Content="Connect" Command="{Binding ConnectPaneConnect}" TabIndex="7" IsDefault="True"></Button>

            </Grid>

            <!--<Grid Width="500" VerticalAlignment="Center" x:Name="LoginContent"  d:Visibility="Visible" Visibility="{Binding LoginActive, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Center" >
                <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="10" BorderBrush="Black" BorderThickness="1" Background="Transparent" CornerRadius="3">
                    <Grid Margin="50">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="96"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="{Binding LoginErrorMessage}" Style="{StaticResource ErrorStyle}" Visibility="{Binding LoginErrorMessage, Converter={StaticResource NullToVisibilityConverter}}" TextWrapping="WrapWithOverflow" ScrollViewer.VerticalScrollBarVisibility="Visible"></TextBlock>
                        <TextBlock Text="Enter the email and password from your SQL+ registration to continue." Visibility="{Binding LoginErrorMessage, Converter={StaticResource NotNullToVisibilityConverter}}" TextWrapping="WrapWithOverflow"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Email:"/>
                        <TextBox Grid.Row="2" Text="{Binding Email,  Mode=TwoWay}" VerticalContentAlignment="Center"/>

                        <TextBlock Grid.Row="3" Style="{StaticResource LabelStyleSmall}" VerticalAlignment="Bottom" Text="Password:"/>
                        <PasswordBox x:Name="LoginPasswordBox" Grid.Row="4" VerticalContentAlignment="Center"/>

                        <Button Grid.Row="5" Width="96" Height="32" HorizontalAlignment="Center" Style="{StaticResource PrimaryButtonStyle}" Content="Login" IsDefault="True" Command="{Binding LoginExecuteCommand}" CommandParameter="{Binding ElementName=LoginPasswordBox}"></Button>

                        <TextBlock Grid.Row="6" Text="{Binding PasswordValue}"/>
                        <TextBlock Grid.Row="6" Style="{StaticResource LabelStyleSmall}" HorizontalAlignment="Center">
                    <Run>Not Yet Registered? Sign Up</Run>
                        <Hyperlink NavigateUri="https://www.sqlplus.net/account/register" RequestNavigate="Hyperlink_RequestNavigate" >Here</Hyperlink>
                        </TextBlock>

                        <TextBlock Grid.Row="7" Style="{StaticResource LabelStyleSmall}" HorizontalAlignment="Center">
                    <Run>Forgot Password? Reset it </Run>
                        <Hyperlink NavigateUri="https://www.sqlplus.net/account/forgot-password" RequestNavigate="Hyperlink_RequestNavigate" >Here</Hyperlink>
                        </TextBlock>

                    </Grid>
                </Border>


            </Grid>-->


            <TreeView Name="DatabaseRoutines"  d:Visibility="Collapsed" ItemsSource="{Binding DBRoutines}" Visibility="{Binding RoutinesActive, Converter={StaticResource BoolToVisibilityConverter}}" KeyboardNavigation.IsTabStop="False" IsTabStop="False" KeyboardNavigation.TabNavigation="Cycle" BorderBrush="{StaticResource ContentBorderBrush}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type models:Schema}" ItemsSource="{Binding Routines}">
                        <StackPanel Orientation="Horizontal" Width="600" Height="32" Margin="5">
                            <CheckBox VerticalAlignment="Center" Margin="0,0,5,0" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                            <TextBlock Width="180" VerticalAlignment="Center" Text="{Binding Name}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" FontWeight="SemiBold" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"/>
                            <TextBlock VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Text=" Namespace: " Style="{StaticResource LabelStyle}" FontWeight="SemiBold" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"/>
                            <TextBox VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Text="{Binding Namespace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        Style="{StaticResource ValidatedTextBoxSmall}" FontWeight="SemiBold"
                                        Width="300" Margin="0,0,30,0" KeyboardNavigation.TabNavigation="Continue" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}">
                            </TextBox>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type models:Routine}">
                        <Grid>
                            <Border Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" BorderBrush="{StaticResource ErrorColorBrush}" BorderThickness="2" CornerRadius="2" Margin="-5,-3,1,0"></Border>
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Height="28">
                                    <CheckBox VerticalAlignment="Center" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                                    <TextBlock Width="180" VerticalAlignment="Center" Text="{Binding Name}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"></TextBlock>
                                    <TextBlock VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" Text=" Namespace: " Style="{StaticResource LabelStyle}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"/>
                                    <TextBox VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}"
                                        Text="{Binding Namespace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                        Style="{StaticResource ValidatedTextBoxSmall}"
                                        Width="280" Margin="0,0,30,0" KeyboardNavigation.IsTabStop="True"/>
                                </StackPanel>
                                <TextBlock Width="550" Text="{Binding RoutineError}" Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="{StaticResource ErrorColorBrush}" Margin="5" TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>

            <TreeView Name="QueryRoutines"  d:Visibility="Collapsed" ItemsSource="{Binding QueryRoutines}" Visibility="{Binding QueriesActive, Converter={StaticResource BoolToVisibilityConverter}}" IsTabStop="False" KeyboardNavigation.TabNavigation="Cycle" BorderBrush="{StaticResource ContentBorderBrush}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type models:Schema}" ItemsSource="{Binding Routines}">
                        <StackPanel Orientation="Horizontal" Width="600" Height="32" Margin="5">
                            <CheckBox VerticalAlignment="Center" Margin="0,0,5,0" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Namespace}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Width="180" FontWeight="SemiBold"></TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type models:Routine}">
                        <Grid>
                            <Border Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" BorderBrush="{StaticResource ErrorColorBrush}" BorderThickness="2" CornerRadius="2" Margin="-5,-3,1,0"></Border>
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Height="28">
                                    <CheckBox BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" VerticalAlignment="Center" IsChecked="{Binding IsSelected, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" KeyboardNavigation.IsTabStop="False"/>
                                    <TextBlock Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" VerticalAlignment="Center" Text="{Binding Name}" Style="{StaticResource LabelStyle}" TextTrimming="CharacterEllipsis" Width="170"></TextBlock>
                                </StackPanel>
                                <TextBlock Width="550" Text="{Binding RoutineError}" Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" Foreground="{StaticResource ErrorColorBrush}" Margin="5" TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>

            <Grid x:Name="StaticsContentGridContainer" d:Visibility="Collapsed" Visibility="{Binding StaticsActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="42"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource AlternateButtonStyle}" Width="28" Height="28"  Command="{Binding AddStaticsCommand}" ToolTip="Add Static List Query">
                    <Image Source="../Resources/Add.png" Height="16" Width="16"/>
                </Button>

                <Grid x:Name="StaticsContentGrid" Grid.Row="1">
                    <Border BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1"/>
                    <ScrollViewer Margin="2" Name="StaticLists">
                        <ItemsControl ItemsSource="{Binding StaticQueries}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <GroupBox Header="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" FontFamily="{StaticResource PrimaryFont}" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <Grid VerticalAlignment="Center" Margin="0,5,0,5">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="32"/>
                                                    <RowDefinition Height="64"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20"/>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="1" Text="Name: " VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                                <TextBox Grid.Row="0" Grid.Column="2" 
                                                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ValidatedTextBoxSmall}" Width="200" HorizontalAlignment="Left"></TextBox>
                                                <Button Grid.Row="0" Grid.Column="2" Margin="0,0,16,0" Command="{Binding DeleteCommand}" BorderBrush="{StaticResource ErrorColorBrush}" Style="{StaticResource AlternateButtonStyle}" Width="24" Height="24" HorizontalAlignment="Right" KeyboardNavigation.IsTabStop="False">
                                                    <Image Height="14" Width="14" Source="../Resources/Delete.png" ToolTip="Delete Static List Query"/>
                                                </Button>
                                                <TextBlock Grid.Row="1" Grid.Column="1" Text="Query:" VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                                <TextBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Width="536"
                                                     Text="{Binding Query, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" TextWrapping="Wrap" Height="64" VerticalContentAlignment="Top" VerticalScrollBarVisibility="Visible" Style="{StaticResource ValidatedTextBoxSmall}"/>
                                            </Grid>

                                            <TextBlock Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" Text="{Binding QueryError}" Style="{StaticResource ErrorStyle}"/>

                                        </StackPanel>

                                    </GroupBox>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                </Grid>
            </Grid>

            <Grid x:Name="EnumsContainerGrid" d:Visibility="Collapsed" Visibility="{Binding EnumsActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="42"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource AlternateButtonStyle}" Width="28" Height="28" Command="{Binding AddEnumCommand}" ToolTip="Add Enumeration Query">
                    <Image Source="../Resources/Add.png" Height="16" Width="16"/>
                </Button>

                <Grid x:Name="EnumsContentGrid" Grid.Row="1">
                    <Border BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1"/>
                    <ScrollViewer Margin="2">
                        <ItemsControl ItemsSource="{Binding EnumQueries}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <GroupBox Header="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" Foreground="{Binding HasError, Converter={StaticResource IsErrorToColorConvertRedBlack}}" FontFamily="{StaticResource PrimaryFont}" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <Grid VerticalAlignment="Center" Margin="0,5,0,5">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="32"/>
                                                    <RowDefinition Height="64"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20"/>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="1" Text="Name: " VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                                <TextBox Grid.Row="0" Grid.Column="2" 
                                                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ValidatedTextBoxSmall}" Width="200" HorizontalAlignment="Left"></TextBox>
                                                <Button Grid.Row="0" Grid.Column="2" Margin="0,0,16,0" Command="{Binding DeleteCommand}" BorderBrush="{StaticResource ErrorColorBrush}" Style="{StaticResource AlternateButtonStyle}" Width="24" Height="24" HorizontalAlignment="Right" KeyboardNavigation.IsTabStop="False">
                                                    <Image Height="14" Width="14" Source="../Resources/Delete.png" ToolTip="Delete Enumeration Query"/>
                                                </Button>
                                                <TextBlock Grid.Row="1" Grid.Column="1" Text="Query:" VerticalAlignment="Center" Style="{StaticResource LabelStyle}"></TextBlock>
                                                <TextBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Width="536" 
                                                     Text="{Binding Query, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" TextWrapping="Wrap" Height="64" VerticalContentAlignment="Top" VerticalScrollBarVisibility="Visible" Style="{StaticResource ValidatedTextBoxSmall}"/>
                                            </Grid>
                                            <TextBlock Visibility="{Binding HasError, Converter={StaticResource BoolToVisibilityConverter}}" Text="{Binding QueryError}" Style="{StaticResource ErrorStyle}"/>
                                        </StackPanel>
                                    </GroupBox>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Grid>

            <Grid Name="SettingsGrid"  d:Visibility="Collapsed" ShowGridLines="False" Visibility="{Binding SettingsActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Text="SQL Client:" Style="{StaticResource LabelStyleSmall}"/>
                <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Top" Width="300" HorizontalAlignment="Left" Style="{StaticResource ValidatedTextBoxSmall}" Text="{Binding SQLClientNamespace, Mode=TwoWay}" />

                <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding ImplementINotifyPropertyChanged}"/>
                <TextBlock Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" Text="Implement INotifyPropertyChanged"/>

                <CheckBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding ImplementIChangeTracking}"/>
                <TextBlock Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" Text="Implement IChangeTracking"/>

                <CheckBox Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding ImplementIRevertibleChangeTracking}"/>
                <TextBlock Grid.Row="5" Grid.Column="2" VerticalAlignment="Center" Text="Implement IRevertibleChangeTracking"/>

                <CheckBox Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding UseNullableReferenceTypes}"/>
                <TextBlock Grid.Row="6" Grid.Column="2" VerticalAlignment="Center" Text="Use Nullable Reference Types"/>

            </Grid>

            <Grid x:Name="BuildContent" d:Visibility="Collapsed" Visibility="{Binding BuildActive, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="64"/>
                </Grid.RowDefinitions>

                <ScrollViewer ScrollChanged="ScrollViewer_ScrollChanged" Background="Black" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <StackPanel>
                        <ItemsControl ItemsSource="{Binding BuildOutput, Mode=OneWay}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:BuildItem}">
                                    <TextBlock Text="{Binding Text}" Foreground="{Binding IsError, Converter={StaticResource IsErrorToColorConverterRedWhite}}" FontFamily="Consolas" Margin="10,1,10,1"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>

                <Button Grid.Row="2" Grid.Column="1" Style="{StaticResource PrimaryButtonStyle}" Command="{Binding BuildProjectCommand}"
                        Width="150" Height="36" HorizontalAlignment="Right" Content="Build Project" VerticalAlignment="Center"></Button>

            </Grid>
        </Grid>

        <Grid x:Name="BusyIndicator" d:Visibility="Collapsed" Grid.RowSpan="4" Grid.ColumnSpan="5" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
            <Border Background="Black" Opacity=".2"/>
            <TextBlock Text="Loading..." FontSize="36" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
        </Grid>

        <Grid x:Name="ConfirmDelete" d:Visibility="Collapsed" Grid.RowSpan="4" Grid.ColumnSpan="5" Visibility="{Binding DeleteMessage, Converter={StaticResource NullToVisibilityConverter}}">
            <Border Background="Black" Opacity=".5"></Border>
            <Grid Background="White" Margin="225,170">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="120"/>
                    <RowDefinition Height="80"/>
                </Grid.RowDefinitions>
                <Border Background="#333333"/>
                <TextBlock Grid.Row="1" Text="{Binding DeleteMessage}" TextWrapping="WrapWithOverflow" Margin="24" FontSize="16" FontWeight="Bold"></TextBlock>
                <Button Grid.Row="2" Style="{StaticResource PrimaryButtonStyle}" Height="36" Width="100" Content="Delete" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{Binding ConfirmDeleteCommand}" Margin="20"></Button>
                <Button Grid.Row="2" Style="{StaticResource AlternateButtonStyle}" Height="36" Width="100" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding CancelDeleteCommand}" Margin="20"></Button>
            </Grid>
        </Grid>
    </Grid>

</platform:DialogWindow>
